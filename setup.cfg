[metadata]
name = wildfirepy
author = The WildfirePy Community
author_email =
license = MIT
license_file = LICENSE.rst
url =
description =
long_description = file: README.md

CLASSIFIERS =
    Development Status :: 3 - Alpha
    Intended Audience :: Science/Research
    Intended Audience :: Developers/Scientists
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Topic :: Software Development
    Topic :: Scientific/Engineering
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Operating System :: Unix
    Operating System :: MacOS


[options]
zip_safe = False
packages = find:
python_requires = >=3.5
setup_requires =
  setuptools_scm
install_requires =
    pyproj
    requests

[options.extras_require]
all =
test =
    pytest
    pytest-cov
    pytest-remotedata

[options.package_data]
wildfirepy = data/*

[tool:pytest]
testpaths = "wildfirepy"

[coverage:run]
omit =
  wildfirepy/__init*
  wildfirepy/conftest.py
  wildfirepy/*setup_package*
  wildfirepy/tests/*
  wildfirepy/*/tests/*
  wildfirepy/extern/*
  wildfirepy/version*
  */wildfirepy/__init*
  */wildfirepy/conftest.py
  */wildfirepy/*setup_package*
  */wildfirepy/tests/*
  */wildfirepy/*/tests/*
  */wildfirepy/extern/*
  */wildfirepy/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_
